{
    "projects": [
      {
        "id": "0",
        "title": "Coming Soon",
        "content": "<p class='body-text'>Projects are always being added so come back often to see what cool projects I've been working on!</p>",
        "next": "",
        "prev": "./template.html?project=1"
      },
      {
        "id": "1",
        "title": "Swift App Dev",
        "content": "<p class='body-text'>The idea for Aid EHD came from my wife. When I told her I wanted to create an app using the new Swift language I was learning she said, “it would be nice if I had an app that could remind me what I’m supposed to be doing so I don’t get so distracted.” I thought this was an interesting challenge, so I did the research, and this is what I came up with.</p><a href='https://github.com/erikrutledge/AidEHD'><img class='example-images' src='../media/1/appinterface.png'></a><p class='body-text'>I chose the name Aid EHD because the goal of the app is to help those who have ADHD brain and get distracted before they finish their tasks, like my wife. The app itself is very simple in design and just has a text field, 2 sliders and a button. The idea is that when the user knows they have a task that needs to get done they can open the app and type in what they need to do, for example “Get your homework done!” Then they move the first slider to reflect how long the task should take, maybe 2 hours. Then the last slider allows them to adjust how often they would like to be reminded. After all the information is input, they can press the “Start Focusing” button to schedule notifications every set amount of time for the course of their task.</p><a href='https://github.com/erikrutledge/AidEHD'><img class='example-images' src='../media/1/thumbnail.png'></a><p class='body-text'>I enjoyed writing this project especially because I could see this being used practically by a lot of people. It was also great to work in XCode on this project because of all the simulation tools it provides. I was able to create a simulation of the exact model phone I planned to run the app on and could see changes made in real time. This isn’t something new, but for someone who mainly works in Python or C++ it was really neat. Above is a screenshot of the development environment showing the simulation I just talked about, and below is an example of what the notifications would look like on your phone.</p><a href='https://github.com/erikrutledge/AidEHD'><img class='example-images' src='../media/1/notification.png'></a><p class='body-text'>The app is not currently on the Appstore, but I do plan on fixing some bugs, changing a few of the design elements, and doing a full release eventually. If you’re interested in seeing the source code you can click any of the images above that will direct you to the public GitHub repository.</p>",
        "next": "./template.html?project=0",
        "prev": "./template.html?project=2"
      },
      {
        "id": "2",
        "title": "RESTful APIs",
        "content": "<p class='body-text'>This project was made to practice using APIs and dynamically update a website based on the user's input and randomly generated numbers. There were a few challenges I had to overcome for this project, but it’s one of my favorite because of the simplicity. The entire website is visible on arrival and just has a dropdown menu and a button. Click on this first image or right <a href='PokeAPI.html'>here</a> to try it out!</p><a href='PokeAPI.html'><img class='example-images' src='../media/2/pokeapi-home.png'></a><p class='body-text'>I was inspired to make this silly tool when I found pokeapi.co and started to brainstorm ways I could use it. It was my first attempt to draw information from these large data sets using JavaScript and I found it very enjoyable. I added the ability to select which generation of Pokemon the user wanted to draw from, but this hasn't been updated to the newest version quite yet.</p><a href='https://pokeapi.co/'><img class='example-images' src='../media/2/thumbnail.png'></a><p class='body-text'>I was very pleased with how the project turned out, especially with how concise I was able to make the logic in the JavaScript file. If you're at all interested in the project's source files, click <a href='https://github.com/erikrutledge/erikrutledge.github.io'>here</a> to see the public github repository.</p>",
        "next": "./template.html?project=1",
        "prev": "./template.html?project=3"
      },
      {
        "id": "3",
        "title": "Website Portfolio",
        "content": "<p class='body-text'>I’m not sure if it’s clear when looking at this website, but every page, link, animation font, color, screenshot, and more were created by me using HTML, CSS, and JavaScript. Even the hosting of this website is through GitHub pages meaning no paid services or fancy external libraries were used at all, just vanilla web design. As someone who likes to learn everything I can when it comes to software development, I couldn’t bring myself to use a template because I wanted to know that I could do it myself.</p><a href='https://github.com/erikrutledge/erikrutledge.github.io'><img class='example-images' src='../media/3/homepage.png'></a><p class='body-text'>All of the pages and their elements were written in HTML, the styling was done in CSS, and all the page scripting was done in JavaScript. If you’re curious about any of these files, click on the image above to be directed to the GitHub repository where all the files used in this project are laid out.</p>",
        "next": "./template.html?project=2",
        "prev": "./template.html?project=4"
      },
      {
        "id": "4",
        "title": "Terminal Greed",
        "content": "<p class='body-text'>You may have noticed from my previous projects that I enjoy puns as names for the projects, and this one is no different. Terminal Greed is a 2-player game that runs in the console command line, also known as the terminal. The game is all about the temptation of taking money, but like the title warns, greed is a terminal illness, and it will kill you.</p><p class='body-text'>The game takes turns and alternates play between the 2 players. To begin, both players enter their names then they are shown a random amount of money placed into the center pool that they can try to steal. Starting with player 1 the game will ask if they want to steal the money or leave it. After locking in their decision the console is cleared so player 2 doesn’t see their answer before making their own decision with the same options. If one of the players choose to steal and the other passes, the player that stole walks away with the money. The catch is if both players try to steal neither of them get it and they are deducted money from their wallets equal to the money they tried to steal. If you ever run out of money you lose!</p><a href='https://github.com/erikrutledge/Cpp_Game'><img class='example-images' src='../media/4/decision.png'></a><a href='https://github.com/erikrutledge/Cpp_Game'><img class='example-images' src='../media/4/lose.png'></a><p class='body-text'>The most compelling part of this game is the mind tricks you can play on your opponent because the better you know them, the more money you can walk away with. The money isn’t pointless either because if you accumulate more than $100 you can spend it on an extra life. Play continues until, like Monopoly, one person is rich and the other is left with nothing.</p><a href='https://github.com/erikrutledge/Cpp_Game'><img class='example-images' src='../media/4/life.png'></a><a href='https://github.com/erikrutledge/Cpp_Game'><img class='example-images' src='../media/4/summary.png'></a><p class='body-text'>Even though terminal, or command line, games are pretty outdated and are limited in their capabilities, I really enjoyed thinking creatively to balance a fun game that focuses less on the technology and more on the human interaction. As you can see in these media the game itself is just text but is very enjoyable to play.</p><a href='https://github.com/erikrutledge/Cpp_Game'><img class='example-images' src='../media/4/results.png'></a><p class='body-text'>By clicking any of the images on this page you can be directed to the public GitHub repository to check out the source code for yourself.</p>",
        "next": "./template.html?project=3",
        "prev": "./template.html?project=5"
      },
      {
        "id": "5",
        "title": "Python Simulation",
        "content": "<p class='body-text'>Pokulation is a Pokemon Simulation game written in Python using the Python Arcade library. I had this idea for a game when I saw a project someone else made for a rock, paper, scissors simulation. Their project was just a button that created a random amount of rock/paper/scissor objects that moved randomly around the screen bouncing off each other. When the objects collided, the losing object would transform into the object that defeated it, and this would happen until all the items were the same at which point the simulation would end.</p><a href='https://github.com/erikrutledge/Pokulation-Game'><img class='example-images' src='../media/5/startscreen.png'></a><p class='body-text'>I wanted to expand the concept of this collision simulation idea, but with more collisions, more complex interactions, and input from the player to make it more of a game than a passive experience. That’s when I got the idea to use Pokemon types as the collision criteria, for example water type is super-effective against fire so that collision would result in the deletion of the fire type object. This type-logic includes all 18 different Pokemon types and every possible collision combination.</p><p class='body-text'>Another major difference I included in my game that wasn’t present in the rock paper scissors version was additional user interaction. To do this I created a play field with a menu bar across the bottom of the screen. When you enter the level, nothing will happen because the game is waiting for the user to place the objects into the play area. I gave the player the ability to drag and drop objects from the menu bar into the playing field. After dropping an object, the player can click around the window, which points an arrow, to tell the piece which direction to apply the impulse force. After the pieces are placed and directions are given, the player can press “Start!” to begin the simulation and all the pieces start along their given trajectory simultaneously.</p><a href='https://github.com/erikrutledge/Pokulation-Game'><img class='example-images' src='../media/5/playedgame.png'></a><p class='body-text'>The current state of the project has all the functional elements created and enough spaces to create 12 levels. There are some improvements that I would like to make, but I won’t go into that here. If you’re interested in the technical development, click the image above to access the public GitHub repository.</p>",
        "next": "./template.html?project=4",
        "prev": "./template.html?project=6"
      },
      {
        "id": "6",
        "title": "Applied Python",
        "content": "<iframe class='example-videos' height='400' width='500' src='https://www.youtube.com/embed/tGYcOiZuvmo' frameborder='0' allowfullscreen></iframe><p class='body-text'>This project is a fully functional clone of the NES Dr Mario game made in Python using the Pygame library. I started this project thinking it wouldn't be too difficult to adapt a tetris project I had made in the past, but I quickly learned that this was a much more interesting challenge. If you'd like to see the game running, watch the video above for a commentated walkthrough of the project!</p><a href='https://github.com/erikrutledge/drmario'><img class='example-images' src='../media/6/box-art.png'></a><p class='body-text'>If you're interested in downloading the game to play for yourself or just want to see the source code, click the image above to be redirected to my GitHub repository.</p>",
        "next": "./template.html?project=5",
        "prev": "./template.html?project=7"
      },
      {
        "id": "7",
        "title": "HubSpot Developer",
        "content": "<p class='body-text'>Nearing the end of my education I was given an opportunity to work as a HubSpot Developer Intern at Pearagon and has able to apply some of the skills I'd accumulated as a student in a professional setting. Over the course of the internship I worked on various projects that I will attempt to highlight here.</p><img class='example-images' src='../media/7/workflow.png'><p class='body-text'>One of the projects I worked on was a custom workflow for a client that would allow them to send out automated emails to their customers based on the customer's activity on their website. This was a great project because it allowed me to learn about the HubSpot API and how to use it to create custom workflows. I also learned how to use the HubSpot API to create custom objects and how to use the HubSpot API to create custom workflows that would interact with those custom objects. This was a great introduction to the various capabilities of the CRM, but also showed that there were limitations to the built in features and gave me insight to the value I had as a developer to create custom functionality.</p><img class='example-images' src='../media/7/hspp.png'><p class='body-text'>Another project I worked on was a completely custom integration between HubSpot and one of the client's pre-existing CRM tools. In this case the client was a Law Firm that offered a variety of legal services inside their Practice Panther account. They wanted Practice Panther to talk to HubSpot and have their services sync between the two platforms. It was an interesting challenge to solve, but also very interesting! I wrote and hosted a Node.js script with TypeScript that would trigger according to a CRON schedule to call the RESTful APIs of both Practice Panther and HubSpot, I used refreshing authorization tokens to request and transform the data before PUTing it on the desired platform. This integration was bidirectional and allowed the client to utilize their pre-existing services through Practice Panther while also allowing them to enjoy the benefits of the HubSpot CRM.</p><p class='body-text'>I enjoyed my time as a HubSpot Developer Intern and learned a lot about the capabilities of the platform and the value of custom integrations. I was also able to complete many of the HubSpot developer courses whenever time allowed and enjoyed learning and applying engineering principles in a company setting!</p>",
        "next": "./template.html?project=6",
        "prev": ""
      },
      {
        "id": "8",
        "title": "Blaque Diamond",
        "content": "<p class='body-text'>Blaque Diamond is a wheel manufacturer that sells a variety of aftermarket wheels with many different vehicles, styles, colors, and finishes. I had the opportunity to build a landing page for them highlighting the options for the C8 Corvette. You can take a look at the site <a href='https://blaquediamond.com/c8-corvette-wheels/'>HERE</a>! I wasn't involved in much of the design process, but was tasked with building the site as close to their design document as possible and really enjoyed the process!</p><a href='https://blaquediamond.com/'><img class='example-images' src='../media/8/figma.png'></a><p class='body-text'>The site went through many different versions and many of the details have been tweaked from this initial wireframe, but the overall structure and purpose of the site has remained the same. Some of the desired features included a hero image across the top of the page, various CTAs, and custom coded interative displays. I think these interactive sections were the most fun to make because they wanted the ability to click the different wheel and finish options to display the wide range of customization available. The page itself was created using the Elementor plugin in WordPress, but various scripts were utilized to acheive the desired effect.</p><p class='body-text'></p><p class='body-text'>Here's the wheel option section:</p><a href='https://blaquediamond.com/'><img class='example-images' src='../media/8/wheels.gif'></a><p class='body-text'>And a few of the custom finish options:</p><a href='https://blaquediamond.com/'><img class='example-images' src='../media/8/finishes.gif'></a><p class='body-text'>I really enjoyed working on this landing page for Blaque Diamond, using Elementor and various other WordPress tools to get their page to match the design document was a very rewarding process. Even though I'm not a designer and tweaks were made throughout the process I am pleased with the feel of the interactive elements I was tasked with creating and the overall results! If you're looking for any custom wheels please check out Blaque Diamond to see if they have options for you!</p>",
        "next": "./template.html?project=7",
        "prev": "./template.html?project=9"
      },
      {
        "id": "9",
        "title": "Greta's Guns",
        "content": "<p class='body-text'>Greta's Guns is a premier retail gun store located in Verntura County, CA started by a retired police officer. They offer a variety of services including firearm repair, custom gun building, and shipping. I joined this project halfway through their process of modernizing their website and fixing various issuse that came up from years of site neglect. Their main issues were: improper WordPress setup, missing product images from a plugin that expired, and a desync in their inventory. These were very complex issues to solve so I'll skip many of the details, but I did learn a lot about domain propagation, database management, backend scripts to execute on a cron schedule, and the WordPress API.</p><a href='https://gretasguns.com/'><img class='example-images' src='../media/9/hero.png'></a><p class='body-text'>Solving the issues one at a time, I began investigating the reason none of the product images were appearing. It turns out if you stop paying for a plugin that stores and serves your images from the cloud, then ignore the warning emails about potentially losing images, all the product images for more than 40,000 products can just disappear! To get the images back I created a single-use script that fetched all active products from the inventory API, found the associated WordPress product listing, erased the broken image association, downloaded the new image, uploaded it to the WordPress media library, and then associated the image with the product. This worked really well, but the script needed to batch the products and execute over the course of a few days to avoid API call limits and memory limits from the host server.</p><a href='https://gretasguns.com/'><img class='example-images' src='../media/9/inventory.png'></a><p class='body-text'>The next problem was to sync the inventory of the third-party API to match the listing information inside WordPress. This also required some custom scripts, but using cron I was able to automate the process to trigger automatically. This was another challenge because the database had 40,000+ products that hadn't been receiving updates for more than 6 months. This project was a lot of data management, getting data from the API, finding the corresponding database table and row, then plugging in the correct information, but this was only the first half of the problem. I then wrote another script that would use that database information to update the WordPress products or create new ones if they needed. Here's an image to better explain the data flow process:</p><img class='example-images' src='../media/9/flowchart.png'><p class='body-text'>This was without a doubt the most challenging project I've been a part of so far. Most of my time was spent debugging and investigating how all the systems were setup and what exactly was broken. I was more of a code janitor on this project than anything and there were times that I considered deleting the entire process and starting over from scratch, even thinking about it now that would have probably been better, but it taught me a TON about how these backend systems talk with eachother. Having to dive into the work of another person without documentation is very tough, especially years after the fact, but it taught me the importance of version control and the software engineering principles of modularity, manitainability, and scalability.</p>",
        "next": "./template.html?project=8",
        "prev": "./template.html?project=10"
      },
      {
        "id": "10",
        "title": "The Hat Haus",
        "content": "<p class='body-text'>Avree, the owner of The Hat Haus, has built an incredible local business, offering build-your-own trucker hats at markets across the greater Salt Lake area. She wanted to take that creativity online—but needed a website that could match the in-person experience. I was tasked with creating a Shopify product page that allowed the user to select their hat syle, color, quantity, and then add and place patches to make an entirely custom product.</p><a href='https://www.hathausco.com/products/custom-hat'><img class='example-images' src='../media/10/hatcreation.gif'></a><p class='body-text'>It was a very interesting challenge to solve because usually each Shopify product has its own page, maybe including a few variations for different colors or sizes, but creating a page for each possible variation of hat with each patch in every arrangement and quantity would be impossible. Instead I build a custom app inside the theme files of the Shopify site to load every patch product and allow the users to click and drag them around the hat image. Whenever the user decides their hat is complete and clicks 'Add to Cart' it compresses the image layers, saves them as a single design, and uploads the unique hat design to an AMS S3 Bucket.</p><a href='https://www.hathausco.com/products/custom-hat'><img class='example-images' src='../media/10/filters.png'></a><p class='body-text'>There are so many little features and details to make this site feel more complete, like the filter and sorting options to more easily navigate the large quantity of patches or the infinite scroll script that loads more patches as needed instead of all 400+ on page load. I could nerd out about this all day, but I'd rather point you towards the site <a href='https://www.hathausco.com/products/custom-hat'>HERE</a> so you can experiment with it and maybe even order some hats!</p>",
        "next": "./template.html?project=9",
        "prev": ""
      }
    ]
  }